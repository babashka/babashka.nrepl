# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  jvm:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      BABASHKA_PLATFORM: linux # could be used in jar name
    resource_class: large
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.10.1.447.sh
            chmod +x linux-install-1.10.1.447.sh
            sudo ./linux-install-1.10.1.447.sh
      - run:
          name: Install lsof
          command: |
            sudo apt-get install lsof
      - run:
          name: Run JVM tests
          command: |
            script/test

  deploy:
    resource_class: large
    docker:
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

workflows:
  version: 2
  ci:
    jobs:
      - jvm
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - jvm

